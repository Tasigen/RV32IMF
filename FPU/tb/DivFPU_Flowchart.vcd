$date
	Thu Jun 05 18:37:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module DivFPU_Flowchart_tb $end
$var wire 32 ! result [31:0] $end
$var reg 32 " A [31:0] $end
$var reg 32 # B [31:0] $end
$var real 1 $ value $end
$scope module dut $end
$var wire 32 % N1 [31:0] $end
$var wire 32 & N2 [31:0] $end
$var wire 32 ' result [31:0] $end
$var wire 1 ( S2 $end
$var wire 1 ) S1 $end
$var wire 8 * E2 [7:0] $end
$var wire 8 + E1 [7:0] $end
$var reg 9 , E [8:0] $end
$var reg 25 - M [24:0] $end
$var reg 24 . M1 [23:0] $end
$var reg 24 / M2 [23:0] $end
$var reg 1 0 Sign $end
$var reg 8 1 exponent [7:0] $end
$var reg 23 2 mantissa [22:0] $end
$var reg 48 3 raw_mant [47:0] $end
$var integer 32 4 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 4
b11001100110011001100110000000000000000000000000 3
b10000110000110000110000 2
b1111110 1
00
b100001100110011001100110 /
b110011001100110011001100 .
b110000110000110000110000 -
b1111110 ,
b10000000 +
b10000001 *
0)
0(
b111111010000110000110000110000 '
b1000000100001100110011001100110 &
b1000000010011001100110011001100 %
r0 $
b1000000100001100110011001100110 #
b1000000010011001100110011001100 "
b111111010000110000110000110000 !
$end
#20
b11001100110011001100110100000000000000000000000 3
b1111011 *
b0 2
b111111100000000000000000000000 !
b111111100000000000000000000000 '
b1111111 1
b0 4
b100000000000000000000000 -
b1111111 ,
b110011001100110011001101 /
b110011001100110011001101 .
b1111011 +
b111101110011001100110011001101 #
b111101110011001100110011001101 &
b111101110011001100110011001101 "
b111101110011001100110011001101 %
#35
r1 $
#40
b1000000000000000000000 2
b1 4
b101000000000000000000000 -
b10000000000000000000000000000000000000000000000 3
b10000001 *
1(
b1111011 1
b1111011 ,
b110011001100110011001100 /
b100000000000000000000000 .
b111101101000000000000000000000 !
b111101101000000000000000000000 '
00
b1111110 +
1)
b11000000110011001100110011001100 #
b11000000110011001100110011001100 &
b10111111000000000000000000000000 "
b10111111000000000000000000000000 %
#55
r0 $
#60
b1 4
b101000000000000000000000 -
b1111011 ,
b10111101101000000000000000000000 !
b10111101101000000000000000000000 '
10
0(
b1000000110011001100110011001100 #
b1000000110011001100110011001100 &
#75
r-0 $
#80
b10110100101101001011010100000000000000000000000 3
b1111110 *
1(
b10000000000000000000000 2
b10000000 1
b1 4
b110000000000000000000000 -
b10000000 ,
b111100001111000011110001 /
b101101001011010010110101 .
b11000000010000000000000000000000 !
b11000000010000000000000000000000 '
10
b10000000 +
0)
b10111111011100001111000011110001 #
b10111111011100001111000011110001 &
b1000000001101001011010010110101 "
b1000000001101001011010010110101 %
#95
r-3 $
#100
b10000000000000000000000000000000000000000000000 3
b1111110 1
00
b10000000 *
0(
b111111001010101010101010101010 !
b111111001010101010101010101010 '
b1010101010101010101010 2
b1 4
b101010101010101010101010 -
b1111110 ,
b110000000000000000000000 /
b100000000000000000000000 .
b1000000010000000000000000000000 #
b1000000010000000000000000000000 &
b1000000000000000000000000000000 "
b1000000000000000000000000000000 %
#115
r0 $
